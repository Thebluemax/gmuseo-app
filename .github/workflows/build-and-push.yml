# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Push Image to Registrygit add .

on:
      
  workflow_dispatch:
    inputs:
      tags:
        description: 'Tags for build'
env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build image from Dockerfile
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          VERSION_NUM_TAG=$(grep -E '"version": "(.*)"' package.json | grep -E -o '[0-9].[0-9].[0-9]')
          IMAGE_ID=$(echo "ghcr.io/$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
          echo VERSION_NUM_TAG=$VERSION_NUM_TAG >> $GITHUB_ENV


          VERSION_REF=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION_REF" == "main" ] && NAME_VERSION=latest
          [ "$VERSION_REF" != "main" ] && NAME_VERSION=${VERSION_NUM_TAG}-${VERSION_REF}

          echo NAME_VERSION=$NAME_VERSION >> $GITHUB_ENV

      - name: Tag and push image
        run: |
          echo $IMAGE_ID:$VERSION_NUM_TAG "--" $IMAGE_ID:$NAME_VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION_NUM_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$NAME_VERSION
          docker push $IMAGE_ID:$VERSION_NUM_TAG
          docker push $IMAGE_ID:$NAME_VERSION
