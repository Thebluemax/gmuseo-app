# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Push Image to Registry from Commit {{ github.ref }}
on:
  push:
    branches:
      - main
      - release/*
      
  workflow_dispatch: 
     
env:
  IMAGE_NAME: gmuseo-app

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build image from Dockerfile
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: get the version from package.json
        run: |
          VERSION_NUM_TAG=$(grep -E '"version": "(.*)"' package.json | grep -E -o '[0-9].[0-9].[0-9]')
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "main" ] && NAMED_VERSION=latest
          [ "$VERSION" == "development" ] && VERSION=$(${VERSION_NUM_TAG}-dev)
          echo IMAGE_ID=$IMAGE_ID:$VERSION_NUM_TAG
          echo VERSION=$VERSION
      - name: Tag and push image
        run: |
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION_NUM_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION_NUM_TAG
          docker push $IMAGE_ID:$VERSION
